#!/usr/bin/env python

import argparse
import sys
import os

sys.path.append(os.path.dirname(os.path.realpath(__file__)) + "/src")

from dataset import *
from supervisor import *
from handler import Handler
from controller import Controller

parser = argparse.ArgumentParser()
group = parser.add_mutually_exclusive_group()
group.add_argument('--init', action='store_true', help ="Initialize all available datasets")
group.add_argument('--purge', action='store_true', help ="Remove all datasets and databases")
group.add_argument('-c', '--create', nargs='+', help ="Create specified dataset(s)")
group.add_argument('-r', '--remove', nargs='+', help ="Remove specified dataset(s)")
group.add_argument('-f', '--fill',   nargs='+', help ="Fetch historical quotes")
group.add_argument('-u', '--update', nargs='+', help ="Update dataset with newest quotes")
group.add_argument('--dblist', action='store_true', help ="Show databases")
group.add_argument('--sqlstatus', action='store_true', help ="Show sql status")
group.add_argument('--sqlusers', action='store_true', help ="Show sql users")

if len(sys.argv) == 1:
    parser.print_help()
    sys.exit(1)

args = parser.parse_args()

main_dir = os.path.dirname(os.path.realpath(__file__))
dump_dir = main_dir + '/.dump'

if not os.path.exists(dump_dir):
    os.makedirs(dump_dir)

#---------------------------------------

DbSupervisor.establishMySqlConnection()
Controller.setProjectDirs(main_dir, dump_dir)
Controller.loadDatasets()

if args.init:
    Handler.init()
elif args.purge:
    Handler.purge()
elif args.create:
    Handler.create(args.create)
elif args.remove:
    Handler.remove(ags.remove)
elif args.fill:
    Handler.fill(args.fill)
elif args.update:
    Handler.update(args.update)
elif args.dblist:
    Handler.dblist()
elif args.sqlstatus:
    Handler.sqlstatus()
elif args.sqlusers:
    Handler.sqlusers()
